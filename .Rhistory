train <- read.csv("~/Downloads/train.csv")
View(train)
source <- train[, 1]
source('~/Documents/workspace/zip-extract/dtm_by.R')
source <- as.matrix(source)
source('~/Documents/workspace/zip-extract/dtm_by.R')
as.data.frame( names.dtm) -> d
as( names.dtm, "data.frame") ->d
as( names.dtm, "matrix") ->d
dim(d)
d$class = train$class
d$class <- train$class
View(d)
dim(train)
dim( d)
dim(d)
as.data.frame( d ) -> d
dim(d)
findFreqTerms(names.dtm, highfreq = 200)
findFreqTerms(names.dtm, highfreq = 100)
findFreqTerms(names.dtm, highfreq = 80)
findFreqTerms(names.dtm, highfreq = 70)
findFreqTerms(names.dtm, lowfreq=10, highfreq = 70)
findFreqTerms(names.dtm, lowfreq=5, highfreq = 70)
findFreqTerms(names.dtm, lowfreq=2, highfreq = 70)
findFreqTerms(names.dtm, lowfreq=3, highfreq = 70)
findFreqTerms(names.dtm, lowfreq=3, highfreq = 70) -> cos
edit(cos) -> cos
d[,cos] -> d
d <- as.data.frame( inspect( names.dtm))
dim(d)
d$class = train$class
d <- d[,cos]
svm( class ~., d, cross=5) -> mod
?svm
??svm
library(e1071)
svm( class ~., d, cross=5) -> mod
summary(mod)
plot(mod)
svm( class ~., d, cross=5, kernel = radial) -> mod
svm( class ~., d, cross=5, kernel = 'radial') -> mod
summary(mod)
?rpart
library("RWeka", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("RWekajars", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
OneR( class ~., d)
?binarize
??binarize
d = d >0
OneR( class ~., d)
OneR( class ~., as.data.frame(d))
OneR( class ~., as.data.frame(d)) -> mod
predict( mod, d)
predict( mod, as.data.frame(d))
DCLAB.GRANT.ORGS...orgs <- read.csv("~/Downloads/DCLAB GRANT ORGS - orgs.csv")
View(DCLAB.GRANT.ORGS...orgs)
View(DCLAB.GRANT.ORGS...orgs)
View(DCLAB.GRANT.ORGS...orgs)
rename(DCLAB.GRANT.ORGS...orgs, orgs)
DCLAB.GRANT.ORGS...orgs -> orgs
source <- as.matrix( orgs[,2])
head(source)
source('~/Documents/workspace/zip-extract/dtm_by.R')
e <- as.data.frame( inspect(names.dtm))
View(e)
e$class <- 0
e <- e[,cos]
predict(mod, e) -> e_pred
e <- e > 0
predict(mod, e) -> e_pred
predict(mod, as.data.frame(e)) -> e_pred
summary(e_pred)
orgs$class = e_pred
View(orgs)
source <- as.matrix(train[, 1])
source('~/Documents/workspace/zip-extract/dtm_by.R')
findFreqTerms(names.dtm, lowfreq = 10)
findFreqTerms(names.dtm, lowfreq = 5)
findFreqTerms(names.dtm, lowfreq = 6)
findFreqTerms(names.dtm, lowfreq = 10)
findFreqTerms(names.dtm, lowfreq = 10) -> cos
edit(cos) -> cos
as.data.frame( inspect( names.dtm)) -> d
d$class <- train$class
d[,cos] -> d
svm( class ~ ., cross=5) -> mod
svm( class ~ .,d, cross=5) -> mod
summary(mod)
svm( class ~ .,d, cross=5, type="C-classification") -> mod
summary(mod)
e <- e[,cos]
source <- as.matrix( orgs[,2])
source('~/Documents/workspace/zip-extract/dtm_by.R')
e <- as.data.frame( inspect(names.dtm))
e$class <- 0
e <- e[,cos]
predict(mod, e) -> pred_e
e$class <- pred_e
View(e)
orgs$class <- pred_e
View(orgs)
out <- orgs[,-1]
write.csv2( out, "labeled_orgs.csv", fileEncoding = "UTF-8")
warnings()
orgs <- read.csv("~/Downloads/DCLAB GRANT ORGS - orgs.csv", encoding="UTF-8")
View(orgs)
orgs$class <- pred_e
write.csv2( orgs, "labeled_orgs.csv", fileEncoding = "UTF-8")
summary(mod)
cos
summary( orgs$class)
rnorm( 1:nrow(orgs), 2) -> ind
hist(ind)
ind <- ind > 2
orgs[ind,] -> sampl
library(xslx)
library(xlxs)
library(xlsx)
write.xlsx2(sampl, file="orgs_sample.xlsx")
library(xlsx)
read.xlsx2("~/Document/menumeme/xslIngredients/norm_muffins.xslx") -> s
read.xlsx2("~/Document/menumeme/xslIngredients/norm_muffins.xslx", 1) -> s
read.xlsx2("~/Document/menumeme/xslIngredients/norm_muffins.xlsx", 1) -> s
read.xlsx2("~/Document/menumeme/xslIngredients/norm_muffins.xlsx") -> s
read.xlsx2("/Users/richardthorne/Documents/menumeme/xslIngredientParsing/norm_muffins.xlsx", 1) -> s
View(S)
View(s)
read.xlsx2("/Users/richardthorne/Documents/menumeme/xslIngredientParsing/norm_muffins.xlsx", 1) -> s
View(s)
?read.xlsx2
read.xlsx2("/Users/richardthorne/Documents/menumeme/xslIngredientParsing/norm_muffins.xlsx", 1, header=TRUE) -> s
View(s)
read.xlsx("/Users/richardthorne/Documents/menumeme/xslIngredientParsing/norm_muffins.xlsx", 1, header=TRUE) -> s
View(s)
?reg
?rexex
?regex
read.xlsx("/Users/richardthorne/Documents/menumeme/xslIngredientParsing/norm_muffins.xlsx", 1) -> s
View(s)
norm_muffins <- read.csv("~/Documents/menumeme/xslIngredientParsing/norm_muffins.csv")
View(norm_muffins)
regex(norm_muffins$carbohydrate, "\d+")
?regexpr
regexpr(norm_muffins$carbohydrate, "\d+")
regexpr(norm_muffins$carbohydrate, "\\d+")
remove( norm_muffins, s)
Muffin.Alternatives...norm_muffins <- read.csv("~/Downloads/Muffin Alternatives - norm_muffins.csv")
View(Muffin.Alternatives...norm_muffins)
?rename
?mv
??rename
muffins <- read.csv("~/Downloads/Muffin Alternatives - norm_muffins.csv")
View(muffins)
df <- data.frame( x = muffins$fats, y=muffins$carbs)
library(gplots)
install.packages("gplots")
library(gplots)
hist2d(df)
?hist2d
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75))
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), title="Muffin recipes")
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), label="Muffin recipes")
?hist
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), main="Muffin recipes")
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), main="Muffin recipes", colr=r)
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), main="Muffin recipes", colr="r")
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), main="Muffin recipes", col=r)
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), main="Muffin recipes", nbins=25)
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), main="Muffin recipes", nbins=5)
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), main="Muffin recipes", nbins=50)
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,20), ylim=c(0,75), main="Muffin recipes")
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,10), ylim=c(0,30), main="Muffin recipes")
hist2d(df, xlab="total fat", ylab="carbohydrate",xlim=c(0,10), ylim=c(0,30), main="Muffin recipes", nbins=400)
hist2d(df, xlab="total fat (g)", ylab="carbohydrate (g)",xlim=c(0,10), ylim=c(0,30), main="Muffin recipes", nbins=400)
org_set2 <- read.csv("~/Downloads/labelled orgs - Sheet1.csv", row.names=1)
View(org_set2)
source <- org_set2$text
org_set <- read.csv("~/Downloads/labelled orgs - Sheet1.csv", row.names=1)
View(org_set)
source <- org_set$text
source('~/Documents/workspace/zip-extract/dtm_by.R')
source <- as.matrix(org_set$text)
source('~/Documents/workspace/zip-extract/dtm_by.R')
e <- as.data.frame( inspect(names.dtm))
e$class <- org_set$class
?R
library(e1071)
e <- e[,cos]
predict(mod, e) -> pred_e
View(e)
tp = e$class == pred_e && e$class == 1
tn = e$class == pred_e && e$class == 0
tp
length( pred_e)
??true positive
?confusionMatrix
??confusionMatrix
library(caret)
install.packages("caret")
library(caret)
cf = data.frame(x = org_set$class   y=pred_e)
cf <- data.frame(x = org_set$class   y=pred_e)
ccf <- data.frame(x = org_set$class   y=pred_e)
ccf <- data.frame(x = org_set$class,   y=pred_e)
confusionMatrix(ccf)
as.table( ccf)
as( ccf, "table")
as( ccf, "list")
as( ccf, "list") -> cf
confusionMatrix( cf)
sort(cf ) -> cf
table( ccf)
table( ccf) -> tf
confusionMatrix(tf)
View(ccf)
e <- e > 0
e <- e[,-class]
e <- e[,-c(class)]
View(e)
e <- e[, -ncol(e)]
View(e)
pred(mod, e) -> pred_e
predict(mod, e) -> pred_e
e <- as.data.frame( inspect(names.dtm))
e <- e[,cos]
e$class = NaN
e <- e[,cos]
predict(mod, e) -> pred_e
cf <- data.frame( x = org_set$class, y = pred_e)
table(cf)
summary(mod)
e$class <- 0
predict(mod, e) -> pred_e
cf <- data.frame( x = org_set$class, y = pred_e)
table(cf)
sample_x <- org_set[50:72,]
View(sample_x)
sample_y <- org_set[87:99,]
View(sample_y)
''
cos
?findFreqTerms
findAssocs(names.dtm)
findFreqTerms(names.dtm)
findAssocs(names.dtm, cos)
findAssocs(names.dtm, cos, 0.6)
cos
View(train)
source <- as.matrix( train$text)
source('~/Documents/workspace/zip-extract/dtm_by.R')
findFreqTerms( names.dtm, lowfreq = 10)
f <- as.data.frame( inspect(names.dtm))
predict( mod, f) -> pred_f
fcf <- data.frame( x = train$class,  y = pred_f)
table(fcf)
confusionMatrix( table(fcf))
source('~/Documents/workspace/zip-extract/dtm_by.R')
View(org_set2)
summary(mod)
sponsors <- read.csv("~/Documents/workspace/zip-extract/sponsors.txt", header=FALSE)
View(sponsors)
source <- as.matrix( sponsors)
source('~/Documents/workspace/zip-extract/dtm_by.R')
source('~/Documents/workspace/zip-extract/dtm_by.R')
f <- as.data.frame( inspect(names.dtm))
predict( mod, f) -> pred_f
library( e1071)
predict( mod, f) -> pred_f
summary(pred_f)
f <- f[,cos]
f$class = NULL
f <- f[,cos]
cos
dim(f)
f <- f[,c(cos)]
View(f)
f[,natur]
f$natur
clear
f[,cos]
source$class <- pred_f
sponsors$class <- pred_f
View(sponsors)
library(xlsx)
write.xlsx2(sponsors, "sponsors.xlsx")
ref_orgs <- read.delim("~/Downloads/labelled orgs - Sheet3.csv", encoding="UTF-8", header=FALSE)
View(ref_orgs)
ind = length( ref_orgs)
hist(ind)
ind = length( ref_orgs$V1)
hist(ind)
head ind
head(ind)
apply( ref_orgs, 2, length) -> ind
hist(ind)
apply( ref_orgs, 2, length) -> ind
ref_orgs$len <- length( ref_orgs$V1)
ref_orgs$len <- strlen( ref_orgs$V1)
ref_orgs$len <- str( ref_orgs$V1)
??length
??string
apply( ref_orgs, 1, nchar) -> ind
apply( ref_orgs$V1, 1, nchar) -> ind
apply( ref_orgs$V1, 2, nchar) -> ind
ref_orgs <- read.delim("~/Downloads/labelled orgs - Sheet3.csv", encoding="UTF-8", header=FALSE)
nchar( ref_orgs)
nchar( ref_orgs$V1)
sapply( ref_orgs,nchar)
sapply( ref_orgs,nchar())
nchar("NSF")
for i= 1 : nrow(ref_orgs ) { nchar( ref_orgs[i])}
foreach  i= 1 : nrow(ref_orgs ) { nchar( ref_orgs[i])}
?foreach
?for
seq( 1:nrow(ref_orgs))
for ( i in seq( 1:nrow(ref_orgs))) { nchar( ref_orgs[i])}
for ( i in seq( 1:nrow(ref_orgs))) { nchar( ref_orgs$V1[i])}
for ( i in seq( 1:nrow( ref_orgs))) { i }
for ( i in seq( 1:nrow( ref_orgs))) {  nchar( ref_orgs[i,1]) }
ref_orgs$len <- nchar( ref_orgs$V1)
ref_orgs <- read.delim("~/Downloads/ref_orgs.csv", encoding="UTF-8", header=FALSE)
tmp <- read.delim("~/Downloads/tmp.csv", header=FALSE)
View(tmp)
ref_orgs <- read.delim("~/Downloads/ref_orgs.csv", encoding="UTF-8", header=FALSE)
hist( tmp$V2)
ind <- tmp$V2 > 7
full_orgs <- tmp[ind,1]
head(full_orgs)
View(full_orgs)
head( ind )
full_orgs <- tmp[ind,1]
head( tmp)
full_orgs <- as.data.frame( full_orgs[ind, 1])
full_orgs <- as.data.frame( full_orgs[ind)
full_orgs <- as.data.frame( tmp[ind,])
source <- as.matrix( full_orgs[,1])
source('~/Documents/workspace/zip-extract/dtm_by.R')
findFreqTerms(names.dtm, lowfreq = 10)
findFreqTerms(names.dtm, lowfreq = 20)
findFreqTerms(names.dtm, lowfreq = 30)
findFreqTerms(names.dtm, lowfreq = 40)
findFreqTerms(names.dtm, lowfreq = 50)
findFreqTerms(names.dtm, lowfreq = 40)
findFreqTerms(names.dtm, lowfreq = 30)
acronym <- tmp[ind == FALSE, 1]
View(acronym)
revind <- ! ind
acronym <- tmp[revind , 1]
View(acronym)
acronym <- as.data.frame(tmp[revind , ])
hist( acronym[,2])
summary( acronym[,2])
x <- acronym[,1] > 6
x <- acronym[,2] > 6
View( acronym)
View( acronym[x,])
View(tmp)
source('~/Documents/workspace/zip-extract/dtm_by.R')
